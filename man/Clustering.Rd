% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/clustering.R
\name{Clustering}
\alias{Clustering}
\title{Consensus clustering}
\usage{
Clustering(
  xdata,
  nc = NULL,
  Lambda = NULL,
  pi_list = seq(0.6, 0.9, by = 0.01),
  K = 100,
  tau = 0.5,
  seed = 1,
  n_cat = 3,
  implementation = HierarchicalClustering,
  scale = TRUE,
  linkage = "complete",
  n_cores = 1,
  output_data = FALSE,
  verbose = TRUE,
  ...
)
}
\arguments{
\item{xdata}{data matrix with items (to cluster) as rows and attributes as
columns.}

\item{nc}{matrix of parameters controlling the number of clusters in the
underlying algorithm specified in \code{implementation}. If \code{nc} is
not provided, it is set to \code{seq(1, tau*nrow(xdata))}.}

\item{Lambda}{vector of penalty parameters. Only used if
\code{implementation=HierarchicalClustering}
or\code{implementation=PAMClustering}.}

\item{pi_list}{vector of thresholds in selection proportions. If
\code{n_cat=3}, these values must be \code{>0.5} and \code{<1}. If
\code{n_cat=2}, these values must be \code{>0} and \code{<1}.}

\item{K}{number of resampling iterations.}

\item{tau}{subsample size. Only used if \code{resampling="subsampling"} and
\code{cpss=FALSE}.}

\item{seed}{value of the seed to initialise the random number generator and
ensure reproducibility of the results (see \code{\link[base]{set.seed}}).}

\item{n_cat}{number of categories used to compute the stability score.
Possible values are 2 or 3.}

\item{implementation}{function to use for clustering. Possible functions
include \code{\link{HierarchicalClustering}} (hierarchical clustering),
\code{\link{PAMClustering}} (Partioning Around Medoids),
\code{\link{KMeansClustering}} (k-means) and \code{\link{GMMClustering}}
(Gaussian Mixture Models). Alternatively, a user-defined function taking
\code{xdata} and \code{Lambda} as arguments and returning a binary and
symmetric matrix for which diagonal elements are equal to zero can be used.}

\item{scale}{logical indicating if the data should be scaled to ensure that
all variables contribute equally to the clustering of the observations.}

\item{linkage}{character string indicating the type of linkage used in
hierarchical clustering to define the stable clusters. Possible values
include \code{"complete"}, \code{"single"} and \code{"average"} (see
argument \code{"method"} in \code{\link[stats]{hclust}} for a full list).
Only used if \code{implementation=HierarchicalClustering}.}

\item{n_cores}{number of cores to use for parallel computing (see
\code{\link[parallel]{mclapply}}). Only available on Unix systems.}

\item{output_data}{logical indicating if the input datasets \code{xdata} and
\code{ydata} should be included in the output.}

\item{verbose}{logical indicating if a loading bar and messages should be
printed.}

\item{...}{additional parameters passed to the functions provided in
\code{implementation} or \code{resampling}.}
}
\value{
An object of class \code{clustering}. A list with: \item{Sc}{a matrix
  of the best stability scores for different (sets of) parameters controlling
  the number of clusters and penalisation of attribute weights.} \item{nc}{a
  matrix of numbers of clusters.} \item{Lambda}{a matrix of regularisation
  parameters for attribute weights.} \item{Q}{a matrix of the average number
  of selected attributes by the underlying algorithm with different
  regularisation parameters.} \item{coprop}{an array of consensus matrices.
  Rows and columns correspond to items. Indices along the third dimension
  correspond to different parameters controlling the number of clusters and
  penalisation of attribute weights.} \item{selprop}{an array of selection
  proportions. Columns correspond to attributes. Rows correspond to different
  parameters controlling the number of clusters and penalisation of attribute
  weights.} \item{method}{a list with \code{type="clustering"} and values
  used for arguments \code{implementation}, \code{linkage}, and
  \code{resampling}.} \item{params}{a list with values used for arguments
  \code{K}, \code{tau}, \code{pk}, \code{n} (number of observations in
  \code{xdata}), and \code{seed}.} The rows of \code{Sc}, \code{nc},
  \code{Lambda}, \code{Q}, \code{selprop} and indices along the third
  dimension of \code{coprop} are ordered in the same way and correspond to
  parameter values stored in \code{nc} and \code{Lambda}.
}
\description{
Performs consensus (weighted) clustering. The underlying algorithm (e.g.
hierarchical clustering) is run with different number of clusters
(\code{nc}). For weighed clustering (e.g. using distances defined by COSA),
different penalty parameter for attribute weights (\code{Lambda}) are also
used. The hyper-parameter(s) are calibrated by maximisation of the consensus
score.
}
\details{
In consensus clustering, a clustering algorithm is applied on
  \code{K} subsamples of the items with different numbers of clusters
  provided in \code{nc}. For a given number of clusters, the consensus matrix
  \code{coprop} stores the proportion of iterations where two items were in
  the same estimated cluster, out of all iterations where both items were
  drawn in the subsample.

  Stable cluster membership is obtained by applying a distance-based
  clustering method using \code{(1-coprop)} as distance (see
  \link{Clusters}).

  The number of (stable) clusters is calibrated by maximisation of the
  consensus score (see \link{ConsensusScore}) calculated from the observed,
  most stable, and most unstable likelihoods:

  \eqn{S(\lambda, n_C) = [ log(L_u(\lambda, n_C)) - log(L_o(\lambda, n_C)) ]
  / [ log(L_u(\lambda, n_C)) - log(L_s(\lambda, n_C)) ]}

  It is strongly recommended to examine the calibration plot (see
  \code{\link{CalibrationPlot}}) to check that there is a clear maximum. The
  absence of a clear maximum suggests that the clustering is not stable,
  consensus clustering outputs should not be trusted in that case.

  To ensure reproducibility of the results, the starting number of the random
  number generator is set to \code{seed}.

  For parallelisation, stability selection with different sets of parameters
  can be run on \code{n_cores} cores. This relies on forking with
  \code{\link[parallel]{mclapply}} (specific to Unix systems).
}
\examples{
\donttest{
## Consensus clustering

# Data simulation
set.seed(1)
simul <- SimulateClustering(
  n = c(30, 30, 30), nu_xc = 1
)
plot(simul)

# Consensus clustering
stab <- Clustering(
  xdata = simul$data
)
Clusters(stab)


## Consensus weighted clustering

# Data simulation
set.seed(1)
simul <- SimulateClustering(
  n = c(30, 30, 30),
  theta_xc = c(rep(1, 10), rep(0, 10)),
  ev_xc = 0.9
)
plot(simul)

# Consensus weighted clustering
stab <- Clustering(
  xdata = simul$data,
  Lambda = LambdaSequence(lmin = 0.1, lmax = 10, cardinal = 10),
  noit = 20, niter = 10
)
Clusters(stab)
WeightBoxplot(stab)
}
}
\references{
\insertRef{ourstabilityselection}{sharp}

  \insertRef{stabilityselectionMB}{sharp}

  \insertRef{stabilityselectionSS}{sharp}

  \insertRef{SparseClustering}{sharp}

  \insertRef{ConsensusClustering}{sharp}
}
\seealso{
\code{\link{Resample}}, \code{\link{StabilityScore}},
  \code{\link{HierarchicalClustering}}, \code{\link{PAMClustering}},
  \code{\link{KMeansClustering}}, \code{\link{GMMClustering}}

Other stability selection functions: 
\code{\link{BiSelection}()},
\code{\link{GraphicalModel}()},
\code{\link{VariableSelection}()}
}
\concept{stability selection functions}
