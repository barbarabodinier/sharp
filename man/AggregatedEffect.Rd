% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/calibration.R
\name{AggregatedEffect}
\alias{AggregatedEffect}
\title{Average coefficients conditionally on selection}
\usage{
AggregatedEffect(
  stability,
  lambda_id = NULL,
  side = "X",
  comp = 1,
  FUN = stats::median,
  ...
)
}
\arguments{
\item{stability}{output of \code{\link{VariableSelection}}.}

\item{lambda_id}{parameter ID with respect to the grid \code{Lambda}. If
\code{NULL}, average coefficients across the models run with the calibrated
parameter are returned.}

\item{side}{character string indicating if coefficients of the predictor
(\code{side="X"}) or outcome (\code{side="Y"}) coefficients should be
returned. Option \code{side="Y"} is only applicable to PLS models.}

\item{comp}{component ID. Only applicable to PLS models.}

\item{FUN}{function to use to aggregate coefficients of visited models over
resampling iterations. Recommended functions include \code{\link[stats]{median}}
or \code{\link[base]{mean}}.}

\item{...}{additional arguments to be passed to \code{FUN}.}
}
\value{
A matrix of average coefficients across resampling iterations.
}
\description{
Extracts the average coefficients of the (calibrated) models conditionally on
selection across resampling iterations. This function can be applied to the
output of \code{\link{VariableSelection}}.
}
\examples{
\dontrun{

# Example with univariate outcome
set.seed(1)
simul <- SimulateRegression(n = 100, pk = 50, family = "gaussian")
stab <- VariableSelection(xdata = simul$xdata, ydata = simul$ydata, family = "gaussian")
median_betas <- AggregatedEffect(stab)

# Comparison with recalibrated model
recalibrated <- Recalibrate(xdata = simul$xdata, ydata = simul$ydata, stability = stab)
recalib_betas <- recalibrated$coefficients[-1]
plot(median_betas[names(recalib_betas), ], recalib_betas,
  panel.first = abline(0, 1, lty = 2)
)

# Regression with multivariate outcomes
set.seed(1)
simul <- SimulateRegression(n = 100, pk = c(20, 30), family = "gaussian")
stab <- VariableSelection(xdata = simul$xdata, ydata = simul$ydata, family = "mgaussian")
median_betas <- AggregatedEffect(stab)
head(median_betas)
}
}
\seealso{
\code{\link{VariableSelection}}, \code{\link{Recalibrate}}
}
