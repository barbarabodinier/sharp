% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/selection_performance.R
\name{ClusteringPerformance}
\alias{ClusteringPerformance}
\title{Clustering performance}
\usage{
ClusteringPerformance(theta, theta_star, pk = NULL)
}
\arguments{
\item{theta}{binary vector of selected variables (in variable selection) or
binary adjacency matrix (in graphical modelling).}

\item{theta_star}{binary vector of true predictors (in variable selection) or
true binary adjacency matrix (in graphical modelling).}

\item{pk}{optional vector encoding the grouping structure. Only used for
multi-block stability selection where \code{pk} indicates the number of
variables in each group. If \code{pk=NULL}, single-block stability
selection is performed.}
}
\value{
A matrix of selection metrics including:

  \item{TP}{number of True Positives (TP)} \item{FN}{number of False
  Negatives (TN)} \item{FP}{number of False Positives (FP)} \item{TN}{number
  of True Negatives (TN)} \item{sensitivity}{sensitivity, i.e. TP/(TP+FN)}
  \item{specificity}{specificity, i.e. TN/(TN+FP)} \item{accuracy}{accuracy,
  i.e. (TP+TN)/(TP+TN+FP+FN)} \item{precision}{precision (p), i.e.
  TP/(TP+FP)} \item{recall}{recall (r), i.e. TP/(TP+FN)}
  \item{F1_score}{F1-score, i.e. 2*p*r/(p+r)} \item{rand}{Rand index, i.e.
  (TP+TN)/(TP+FP+TN+FN)}

  Block-specific performances are reported if "pk" is not NULL. In this case,
  the first row of the matrix corresponds to the overall performances, and
  subsequent rows correspond to each of the blocks. The order of the blocks
  is defined as in \code{\link{BlockStructure}}.
}
\description{
Computes different metrics of clustering performance by comparing true and
predicted pairwise co-membership. This function can only be used in
simulation studies (i.e. when the true cluster membership is known).
}
\examples{
\dontrun{
set.seed(1)
pk <- sample(1:10, size = 5, replace = TRUE)
print(pk)
simul <- SimulateGraphical(
  n = 100, pk = pk,
  nu_within = 0.6,
  nu_between = 0.1,
  v_within = c(0.1, 1),
  v_between = c(0, 0.3),
  v_sign = -1
)
par(mar = c(5, 5, 5, 5))
Heatmap(
  mat = cor(simul$data),
  colours = c("navy", "white", "red"),
  legend_range = c(-1, 1)
)

# Stability grouping
stab <- GraphicalModel(
  xdata = simul$data,
  Lambda = 1:ncol(simul$data),
  implementation = HierarchicalClustering
)

# Clustering performance
ClusteringPerformance(theta = stab, theta_star = Clusters(BlockDiagonal(pk)))
ClusteringPerformance(
  theta = Clusters(stab),
  theta_star = Clusters(BlockDiagonal(pk))
) # alternative formulation
}

}
\seealso{
Other functions for evaluation of model performance: 
\code{\link{SelectionPerformanceGraph}()},
\code{\link{SelectionPerformance}()}
}
\concept{functions for evaluation of model performance}
