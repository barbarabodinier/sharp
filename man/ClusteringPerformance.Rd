% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/selection_performance.R
\name{ClusteringPerformance}
\alias{ClusteringPerformance}
\title{Clustering performance}
\usage{
ClusteringPerformance(theta, theta_star)
}
\arguments{
\item{theta}{vector of group membership, binary and symmetric matrix of
co-membership, or output of \code{\link{GraphicalModel}}.}

\item{theta_star}{vector of group membership, or binary and symmetric matrix
of co-membership.}
}
\value{
A matrix of selection metrics including:

  \item{TP}{number of True Positives (TP)} \item{FN}{number of False
  Negatives (TN)} \item{FP}{number of False Positives (FP)} \item{TN}{number
  of True Negatives (TN)} \item{sensitivity}{sensitivity, i.e. TP/(TP+FN)}
  \item{specificity}{specificity, i.e. TN/(TN+FP)} \item{accuracy}{accuracy,
  i.e. (TP+TN)/(TP+TN+FP+FN)} \item{precision}{precision (p), i.e.
  TP/(TP+FP)} \item{recall}{recall (r), i.e. TP/(TP+FN)}
  \item{F1_score}{F1-score, i.e. 2*p*r/(p+r)} \item{rand}{Rand index, i.e.
  (TP+TN)/(TP+FP+TN+FN)}
}
\description{
Computes different metrics of clustering performance by comparing true and
predicted pairwise co-membership. This function can only be used in
simulation studies (i.e. when the true cluster membership is known).
}
\examples{
\dontrun{
# Simulation with 5 groups of correlated variables
set.seed(1)
pk <- sample(1:10, size = 5, replace = TRUE)
print(pk)
simul <- SimulateGraphical(
  n = 100, pk = pk,
  nu_within = 0.6,
  nu_between = 0.1,
  v_within = c(0.1, 1),
  v_between = c(0, 0.3),
  v_sign = -1
)
par(mar = c(5, 5, 5, 5))
Heatmap(
  mat = cor(simul$data),
  colours = c("navy", "white", "red"),
  legend_range = c(-1, 1)
)

# Stability grouping
stab <- GraphicalModel(
  xdata = simul$data,
  Lambda = 1:ncol(simul$data),
  implementation = HierarchicalClustering
)

# Clustering performance
ClusteringPerformance(
  theta = stab,
  theta_star = Clusters(BlockDiagonal(pk))
)
ClusteringPerformance(
  theta = Clusters(stab),
  theta_star = Clusters(BlockDiagonal(pk))
) # alternative formulation with membership
ClusteringPerformance(
  theta = CoMembership(Clusters(stab)),
  theta_star = Clusters(BlockDiagonal(pk))
) # alternative formulation with co-membership
}

}
\seealso{
Other functions for model performance: 
\code{\link{SelectionPerformanceGraph}()},
\code{\link{SelectionPerformance}()}
}
\concept{functions for model performance}
