% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/variable_selection.R
\name{VariableSelection}
\alias{VariableSelection}
\title{Stability selection in regression}
\usage{
VariableSelection(
  xdata,
  ydata = NULL,
  Lambda = NULL,
  pi_list = seq(0.6, 0.9, by = 0.01),
  K = 100,
  tau = 0.5,
  seed = 1,
  n_cat = 3,
  family = "gaussian",
  implementation = "glmnet",
  resampling = "subsampling",
  PFER_method = "MB",
  PFER_thr = Inf,
  FDP_thr = Inf,
  Lambda_cardinal = 100,
  n_cores = 1,
  verbose = TRUE,
  ...
)
}
\arguments{
\item{xdata}{matrix of predictors with observations as rows and variables as
columns.}

\item{ydata}{vector or matrix of outcome(s).}

\item{Lambda}{matrix of parameters controlling the level of sparsity in the
underlying feature selection algorithm specified in \code{implementation}.
With \code{implementation="glmnet"}, \code{Lambda} contains penalty
parameters. If \code{Lambda=NULL}, \code{\link{LambdaGridRegression}} is
used to define a relevant grid.}

\item{pi_list}{vector of thresholds in selection proportions. If
\code{n_cat=3}, these values must be \code{>0.5} and \code{<1}. If
\code{n_cat=2}, these values must be \code{>0} and \code{<1}.}

\item{K}{number of resampling iterations.}

\item{tau}{subsample size. Only used with \code{resampling="subsampling"}.}

\item{seed}{value of the seed.}

\item{n_cat}{number of categories used to compute the stability score.
Possible values are 2 or 3.}

\item{family}{type of regression model. This argument is defined as in
\code{\link[glmnet]{glmnet}}. If \code{implementation="glmnet"}, possible
values include \code{"gaussian"} (linear regression), \code{"binomial"}
(logistic regression), \code{"multinomial"} (multinomial regression), and
\code{"cox"} (survival analysis).}

\item{implementation}{character string indicating the name of the function to
use for variable selection. If \code{implementation="glmnet"},
\code{\link[glmnet]{glmnet}} is used for regularised regression.
Alternatively, a function with arguments \code{"x"}, \code{"y"},
\code{"lambda"}, \code{"family"} and \code{...}, and returning a list of
two matrices named "selected" and "beta_full" of the correct dimensions can
be used (more details in \code{\link{SelectionAlgo}}).}

\item{resampling}{resampling approach. Possible values are:
\code{"subsampling"} for sampling without replacement of a proportion
\code{tau} of the observations, or \code{"bootstrap"} for sampling with
replacement generating a resampled dataset with as many observations as in
the full sample. Alternatively, this argument can be a character string
indicating the name of a function to use for resampling. This function must
use arguments named \code{"data"} and \code{"tau"} and return IDs of
observations to be included in the resampled dataset (see example in
\code{\link{Resample}}).}

\item{PFER_method}{method used to compute the upper-bound of the expected
number of False Positives (or Per Family Error Rate, PFER). With
\code{PFER_method="MB"}, the method proposed by Meinshausen and BÃ¼hlmann
(2010) is used. With \code{PFER_method="SS"}, the method proposed by Shah
and Samworth (2013) under the assumption of unimodality is used.}

\item{PFER_thr}{threshold in PFER for constrained calibration by error
control. With \code{PFER_thr=Inf} and \code{FDP_thr=Inf}, unconstrained
calibration is used.}

\item{FDP_thr}{threshold in the expected proportion of falsely selected
features (or False Discovery Proportion, FDP) for constrained calibration
by error control. With \code{PFER_thr=Inf} and \code{FDP_thr=Inf},
unconstrained calibration is used.}

\item{Lambda_cardinal}{number of values in the grid of parameters controlling
the level of sparsity in the underlying algorithm.}

\item{n_cores}{number of cores to use for parallel computing. Only available
on Unix systems.}

\item{verbose}{logical indicating if a loading bar and messages should be
printed.}

\item{...}{additional parameters passed to the functions provided in
\code{"implementation"} or \code{"resampling"}.}
}
\value{
A list with: \item{S}{a matrix of the best stability scores for
  different parameters controlling the level of sparsity in the underlying
  algorithm.} \item{Lambda}{a matrix of parameters controlling the level of
  sparsity in the underlying algorithm.} \item{Q}{a matrix of the average
  number of selected features by underlying algorithm with different
  parameters controlling the level of sparsity.} \item{Q_s}{a matrix of the
  calibrated number of stably selected features with different parameters
  controlling the level of sparsity.} \item{PFER}{a matrix of the
  upper-bounds in PFER of calibrated stability selection models with
  different parameters controlling the level of sparsity.} \item{FDP}{a
  matrix of the upper-bounds in FDP of calibrated stability selection models
  with different parameters controlling the level of sparsity.} \item{S_2d}{a
  matrix of stability scores obtained with different combinations of
  parameters. Columns correspond to different tresholds in selection
  proportions.} \item{selprop}{a matrix of selection proportions. Columns
  correspond to predictors from \code{xdata}.} \item{Beta}{an array of model
  coefficients. Columns correspond to predictors from \code{xdata}. Indices
  along the third dimension correspond to different resampling iterations.
  With multivariate outcomes, indices along the fourth dimension correspond
  to outcome-specific coefficients.} \item{method}{a list with input values
  for the arguments "implementation", "family", "resampling" and
  "PFER_method".} \item{param}{a list with input values for the arguments
  "K", "pi_list", "tau", "n_cat", "pk", "PFER_thr", "FDP_thr", "seed",
  "xdata" and "ydata".} For all objects except those stored in \code{methods}
  or \code{params}, rows correspond to parameter values stored in the output
  \code{Lambda}.
}
\description{
Runs stability selection regression models with different combinations of
parameters controlling the sparsity of the underlying selection algorithm
(e.g. penalty parameter for regularised models) and thresholds in selection
proportions. These two parameters are jointly calibrated by maximising the
stability score of the model (possibly under a constraint on the expected
number of falsely stably selected features).
}
\details{
To ensure reproducibility of the results, the state of the random
  number generator is fixed to \code{seed}. For parallelisation of the code,
  stability selection results produced with different \code{seed}s and all
  other parameters equal can be combined (more details in
  \code{\link{Combine}}).
}
\examples{
# Linear regression
set.seed(1)
simul <- SimulateRegression(n = 100, pk = 50, family = "gaussian")
out <- VariableSelection(xdata = simul$X, ydata = simul$Y, family = "gaussian")
print(SelectedVariables(stab))

# Regression with multivariate outcomes
set.seed(2)
Y <- cbind(simul$Y, matrix(rnorm(nrow(simul$Y) * 2), ncol = 2))
stab <- VariableSelection(xdata = simul$X, ydata = Y, family = "mgaussian")
print(SelectedVariables(stab))
dim(stab$Beta)

# Logistic regression
set.seed(1)
simul <- SimulateRegression(n = 100, pk = 50, family = "binomial")
out <- VariableSelection(xdata = simul$X, ydata = simul$Y, family = "binomial")
print(SelectedVariables(stab))

# Multinomial regression
set.seed(2)
Y=simul$Y+sample(c(0,1,2),size=nrow(simul$Y), replace=TRUE)
Y=model.matrix(~as.factor(Y))[,-1]
SelectionAlgo(x = simul$X, y=Y, family="multinomial", lambda=c(0.05, 0.1))
out <- VariableSelection(xdata = simul$X, ydata = Y, family = "multinomial")
print(SelectedVariables(stab))

}
\seealso{
\code{\link{LambdaGridRegression}}, \code{\link{Resample}},
  \code{\link{Combine}}

Other stability selection functions: 
\code{\link{GraphicalModel}()}
}
\concept{stability selection functions}
