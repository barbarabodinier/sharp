% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/stability_score.R
\name{ConsensusScore}
\alias{ConsensusScore}
\title{Consensus score}
\usage{
ConsensusScore(coprop, nc, K = 100, linkage = "complete")
}
\arguments{
\item{coprop}{consensus matrix obtained with \code{nc} clusters across
\code{K} subsampling iterations.}

\item{nc}{number of clusters.}

\item{K}{number of subsampling iterations.}

\item{linkage}{character string indicating the type of linkage used in
hierarchical clustering to define the stable clusters. Possible values
include \code{"complete"}, \code{"single"} and \code{"average"} (see
argument \code{"method"} in \code{\link[stats]{hclust}} for a full list).}
}
\value{
A consensus score between 0 and 1.
}
\description{
Computes the consensus score from the consensus matrix. The score measures
how unlikely it is that the clustering procedure is uniform (i.e.
uninformative) for a given combination of parameters.
}
\details{
The consensus score is derived from a Stochastic Block Model where
  \eqn{Z(\lambda, n_C)} is a latent random vector taking values in \eqn{{1,
  ..., n_C}} encoding the cluster membership and the \eqn{H_{ij}(\lambda,
  n_C)} are co-membership counts. We have:

  \eqn{(Z_i(\lambda, n_C))_i i.i.d. ~ M(1, p_Z)}

  \eqn{(H_{ij}(\lambda, n_C))_{ij} indep. | Z_i, Z_j ~ B(K, p_{Z_i(\lambda,
  n_C), Z_j(\lambda, n_C)})}

  where \eqn{M} denotes the multinomial distribution and \eqn{B} is the
  binomial distribution.

  The likelihood \eqn{L_o(\lambda, n_C)} of observing co-membership
  proportions at least as extreme conditionally on the stable clusters with a
  given number of clusters \eqn{Z(\lambda, n_C)} can be expressed as:

  \eqn{L_o(\lambda, n_C) = \prod_{i =/= j} P(H_{ij}(\lambda, n_C) \le
  h_{ij})^{1_{Z_i(\lambda, n_C) =/= Z_j(\lambda, n_C)}} x P(H_{ij}(\lambda,
  n_C) \ge h_{ij})^{1_{Z_i(\lambda, n_C) = Z_j(\lambda, n_C)}}}

  We also compute the likelihoods \eqn{L_s(\lambda, n_C)} and
  \eqn{L_u(\lambda, n_C)} for binary (most stable) and flat (most unstable)
  consensus matrices, respectively.

  The consensus score is then defined as:

  \eqn{S(\lambda, n_C) = [ log(L_u(\lambda, n_C)) - log(L_o(\lambda, n_C)) ]
  / [ log(L_u(\lambda, n_C)) - log(L_s(\lambda, n_C)) ]}
}
\examples{

# Data simulation
set.seed(2)
simul <- SimulateClustering(
  n = c(30, 30, 30),
  nu_xc = 1
)
plot(simul)

# Consensus clustering
stab <- Clustering(
  xdata = simul$data
)

# Calculating the consensus score
ConsensusScore(
  coprop = stab$coprop[, , 3],
  nc = stab$nc[3]
)

}
\seealso{
Other stability metric functions: 
\code{\link{FDP}()},
\code{\link{PFER}()},
\code{\link{StabilityMetrics}()},
\code{\link{StabilityScore}()}
}
\concept{stability metric functions}
